@page "/admin/blogs/add-new"
@page "/admin/blogs/update/{ID}"
@layout AdminLayout
@inherits Admin

<PageTitle>Admin Blog</PageTitle>

@if (loggedIn)
{
    <div class="row">
        <div class="col-md-4 p-3">
            <RadzenCard>
                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Upload image</RadzenText>
                <RadzenUpload Multiple="false" Accept="image/*" Url="Api/Upload/Image" Complete=@(args => OnComplete(args)) class="w-100" InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "select file" }})" />
            </RadzenCard>
        </div>
        <div class="col-md-6 p-3">
            <RadzenCard>
                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Title</RadzenText>
                <RadzenTextBox @bind-Value=@title Placeholder="Enter blog title" class="w-100" aria-label="Blog title textbox" />
            </RadzenCard>
        </div>
        <div class="col-md-2 p-3" style="text-align:center">
            <RadzenButton Click=@OnClick Text="Save" ButtonStyle="ButtonStyle.Primary" Style="top:50%; transform: translateY(-50%);" />
        </div>
    </div>
    <RadzenCard>
        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Short description</RadzenText>
        <RadzenTextArea @bind-Value=@shortDes Placeholder="Enter blog short description" class="w-100" aria-label="Blog short description textbox" Style="height:150px" />
    </RadzenCard>
    <RadzenHtmlEditor @bind-Value=@htmlValue style="height: 700px;" UploadUrl="Api/Upload/Image" />

    @if (blog != null)
    {
        <iframe src="/blogs/@blog.ObjectId" title="Preview blog">
        </iframe>
    }
}


@code {
    [Parameter]
    public string? ID { get; set; }

    string title = "";
    string htmlValue = "";
    string shortDes = "";
    Document? blog;

    protected override void OnInitialized()
    {
        if (ID != null)
        {
            blog = DB.Blogs.Find(ID);
            title = blog.Title;
            htmlValue = blog.Content;
            shortDes = blog.ShortDescription;

            StateHasChanged();
        }
    }

    protected async Task OnClick()
    {
        if (blog == null) blog = new Document { ObjectId = Guid.NewGuid().ToString() };
        blog.Title = title;
        blog.Content = htmlValue;
        blog.PublishTime = DateTime.Today;
        blog.ShortDescription = shortDes;

        DB.Blogs.Insert(blog);
        StateHasChanged();

    }

    protected void OnComplete(UploadCompleteEventArgs args)
    {
        if (blog == null) blog = new Document { ObjectId = Guid.NewGuid().ToString() };

        var res = Document.Parse(args.RawResponse);

        blog.ImageUrl = res.GetString("url");
        DB.Blogs.InsertOrUpdate(blog);
        StateHasChanged();
    }
}
