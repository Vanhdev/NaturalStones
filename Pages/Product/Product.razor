@page "/products"

<PageTitle>Products</PageTitle>

<!-- Start Header -->
<div class="fables-header fables-after-overlay">
    <div class="container">
        <h2 class="fables-page-title fables-second-border-color">Store Grid List</h2>
    </div>
</div>
<!-- /End Header -->
<!-- Start Breadcrumbs -->
<div class="fables-light-gary-background">
    <div class="container">
        <nav aria-label="breadcrumb">
            <ol class="fables-breadcrumb breadcrumb px-0 py-3">
                <li class="breadcrumb-item"><a href="#" class="fables-second-text-color">Home</a></li>
                <li class="breadcrumb-item active" aria-current="page">Products</li>
            </ol>
        </nav>
    </div>
</div>
<!-- /End Breadcrumbs -->
<!-- Start page content -->
<div class="container">
    <div class="row my-4 my-md-5">
        <div class="col-12 col-md-4 col-lg-3">
            <div class="fables-store-search mb-4">
                <form>
                    <div class="input-icon">
                        <span class="fables-iconsearch-icon fables-input-icon"></span>
                        <input type="text" class="form-control rounded-0 form-control rounded-0 font-14 fables-store-input pl-5 py-2" placeholder="Search Product">
                    </div>

                </form>
            </div>
            <h2 class="font-16 semi-font fables-forth-text-color fables-light-gary-background  p-3 mb-4">Product Categories</h2>
            <ul class="nav fables-forth-text-color fables-forth-before fables-store-left-list">
                @foreach (var category in Categories)
                {
                    <li><a href="products?category_id=@category.ObjectId">@category.Name</a></li>
                }
            </ul>
        </div>
        <div class="col-12 col-md-8 col-lg-9">

            <div class="row">
                @if (Products == null || Products.Count == 0)
                {
                    <p class="fables-forth-text-color font-18 mb-3">No products yet. Please come back late.</p>
                }
                else
                {
                    @foreach (var product in Products)
                    {
                        <div class="col-12 col-sm-6 col-lg-4 fables-product-block">
                            <div class="card rounded-0 mb-4" @onclick="@(e => Click(product))" style="cursor:pointer">
                                <div class="row">
                                    <div class="fables-product-img col-12">
                                        @if (product.ImageUrlList != null)
                                        {
                                            <img class="card-img-top rounded-0" src="@product.ImageUrlList.FirstOrDefault("")" alt="@product.Name">
                                        }
                                        else
                                        {
                                            <img class="card-img-top rounded-0" src="assets/custom/images/no-image.jpg" alt="@product.Name">
                                        }
                                    </div>
                                    <div class="card-body col-12">
                                        <h5 class="card-title mx-xl-3">
                                            <a href="/product?product_id=@product.ObjectId" class="fables-main-text-color fables-store-product-title fables-second-hover-color" style="text-decoration:none">@product.Name</a>
                                        </h5>
                                        <p class="store-card-text fables-fifth-text-color font-15 mx-xl-3" style="overflow: hidden; text-overflow: ellipsis; display: -webkit-box; -webkit-line-clamp: 6; line-clamp: 6; -webkit-box-orient: vertical;">
                                            @product.ShortDescription
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }


            </div>
            @* <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
            <li class="page-item"><a class="page-link rounded-circle fables-forth-text-color fables-page-link fables-second-hover-background-color" href="#">1</a></li>
            <li class="page-item"><a class="page-link rounded-circle fables-forth-text-color fables-page-link fables-second-hover-background-color" href="#">2</a></li>
            <li class="page-item"><a class="page-link rounded-circle fables-forth-text-color fables-page-link fables-page-link fables-second-hover-background-color" href="#">3</a></li>
            <li><span class="fables-pagi-dots fables-forth-text-color"> .... </span></li>
            <li class="page-item"><a class="page-link rounded-circle fables-forth-text-color fables-page-link fables-second-hover-background-color" href="#">20</a></li>
            </ul>
            </nav> *@
        </div>
    </div>

</div>
<!-- /End page content -->
@code {
    List<Document>? Products;
    List<Document>? Categories;

    public string? categoryId;

    protected override void OnInitialized()
    {
        StringValues category_id;
        var uri = Navigation.ToAbsoluteUri(Navigation.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("category_id", out category_id))
        {
            categoryId = Convert.ToString(category_id);
            var category = DB.Categories.Select(x => x.ObjectId == categoryId).FirstOrDefault();
            Products = DB.Products.Select(x => x.Category == category.Name).ToList();
        }
        // else if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("product_id", out product_id))
        // {
        //     productId = Convert.ToString(product_id);
        //     var category = DB.Categories.Select(x => x.ObjectId == categoryId).FirstOrDefault();
        //     Products = DB.Products.Select(x => x.Category == category.Name).ToList();
        // }
        else
        {
            Products = DB.Products.Select().ToList();
        }

        Categories = DB.Categories.Select().ToList();

        StateHasChanged();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        StringValues category_id;
        var uri = Navigation.ToAbsoluteUri(Navigation.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("category_id", out category_id))
        {
            categoryId = Convert.ToString(category_id);
            var category = DB.Categories.Select(x => x.ObjectId == categoryId).FirstOrDefault();
            Products = DB.Products.Select(x => x.Category == category.Name).ToList();
        }
        // else if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("product_id", out product_id))
        // {
        //     productId = Convert.ToString(product_id);
        //     var category = DB.Categories.Select(x => x.ObjectId == categoryId).FirstOrDefault();
        //     Products = DB.Products.Select(x => x.Category == category.Name).ToList();
        // }
        else
        {
            Products = DB.Products.Select().ToList();
        }

        Categories = DB.Categories.Select().ToList();

        StateHasChanged();
    }

    protected void Click(Document doc)
    {
        Navigation.NavigateTo($"/product?product_id={doc.ObjectId}");
    }
}
